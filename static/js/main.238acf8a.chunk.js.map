{"version":3,"sources":["constants/index.ts","store/filter.ts","helpers/api.ts","store/error.ts","store/products.ts","store/sort.ts","store/cart.ts","store/sidebar.ts","store/index.ts","components/Navigation.tsx","components/Carousel.tsx","components/ProductCard.tsx","components/ProductsList.tsx","components/Sort.tsx","pages/HomePage.tsx","pages/ItemPage.tsx","pages/PageNotFound.tsx","components/Cart.tsx","components/Header.tsx","components/Sidebar.tsx","App.tsx","index.tsx"],"names":["SORT_BY","CATEGORY","all","capes","snickers","shirts","shoes","pants","reducer","filter","action","type","field","fetchProducts","a","fetch","response","json","setError","errorMessage","setProducts","products","sortBy","setQuantity","itemId","amount","cart","some","item","id","cartItem","map","quantity","result","setSidebar","value","isSidebarOpen","rootReducer","combineReducers","productsReducer","errorReducer","sortByReducer","cartReducer","sidebarIsOpen","sidebarReducer","filterBy","filterReducer","getProducts","state","getSortBy","getCartItems","getIsSidebarOpen","getFilterBy","store","createStore","composeWithDevTools","applyMiddleware","thunk","Navigation","dispatch","useDispatch","activeCategory","useSelector","className","Object","entries","categoryName","classNames","key","onClick","images","Carousel","changeImage","activeImage","useState","currentImageIndex","setCurrentImageIndex","index","imgToShow","slice","length","concat","e","stopPropagation","lastIndex","imageUrl","src","alt","ProductCard","product","title","category","price","available","slug","itemImage","setItemImage","history","useHistory","push","pathname","imgUrl","ProductsList","sortedProducts","useMemo","sort","b","reviews","Date","parse","date","dropdownOptions","Sort","isOpen","setIsOpen","activeSortBy","HomePage","ItemPage","useParams","pickedSize","setPickedSize","find","goBack","sizes","size","disabled","PageNotFound","Cart","itemsCount","Header","to","Sidebar","cartItems","cartItemsTotal","total","useEffect","forEach","App","location","useLocation","api","message","from","path","exact","component","MainPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.238acf8a.chunk.js","sourcesContent":["export const API_URL = 'https://aleksandr-tyagun.github.io/store/api';\r\n\r\nexport const SORT_BY = {\r\n  priceAsc: 'price-asc',\r\n  priceDesc: 'price-desc',\r\n  popular: 'popular',\r\n  new: 'new',\r\n}\r\n\r\nexport const CATEGORY = {\r\n  all: 'Все',\r\n  capes: 'Плащи',\r\n  snickers: 'Кроссовки',\r\n  shirts: 'Рубашки',\r\n  shoes: 'Обувь',\r\n  pants: 'Брюки'\r\n}","import { AnyAction } from 'redux';\r\n\r\nimport { CATEGORY } from '../constants';\r\n\r\nconst FILTER_BY = 'FILTER_BY';\r\n\r\nexport const setFilterBy = (field: string) => ({ type: FILTER_BY, field });\r\n\r\nconst reducer = (filter = CATEGORY.all, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case FILTER_BY:\r\n      return action.field;\r\n\r\n    default:\r\n      return filter;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { API_URL } from '../constants';\r\n\r\nexport const fetchProducts = async (): Promise<Product[]> => {\r\n  const response = await fetch(`${API_URL}/products.json`);\r\n\r\n  return response.json();\r\n};","import { AnyAction } from 'redux';\n\n\nconst SET_ERROR = 'SET_ERROR';\n\nexport const setError = (errorMessage: string) => ({ type: SET_ERROR, errorMessage });\n\nconst reducer = (errorMessage = '', action: AnyAction) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.errorMessage;\n\n    default:\n      return errorMessage;\n  }\n};\n\nexport default reducer;\n","import { AnyAction } from 'redux';\r\n\r\n\r\nconst GET_PRODUCTS = 'GET_PRODUCTS';\r\n\r\nexport const setProducts = (products: Product[]) => ({ type: GET_PRODUCTS, products });\r\n\r\nconst reducer = (products: Product[] = [], action: AnyAction) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS:\r\n      return action.products;\r\n\r\n    default:\r\n      return products;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { AnyAction } from 'redux';\r\n\r\nimport { SORT_BY } from '../constants';\r\n\r\nconst SET_SORT_BY = 'SET_SORT_BY';\r\n\r\nexport const setSortBy = (field: string) => ({ type: SET_SORT_BY, field });\r\n\r\nconst reducer = (sortBy = SORT_BY.priceDesc, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case SET_SORT_BY:\r\n      return action.field;\r\n\r\n    default:\r\n      return sortBy;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { AnyAction } from 'redux';\r\n\r\n\r\nconst ADD_TO_CART = 'ADD_TO_CART';\r\nconst REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nconst SET_QUANTITY = 'SET_QUANTITY';\r\n\r\nexport const addToCart = (cartItem: CartItem) => ({ type: ADD_TO_CART, cartItem });\r\nexport const removeFromCart = (itemId: CartItem) => ({ type: REMOVE_FROM_CART, itemId });\r\nexport const setQuantity = (itemId: number, amount: number) => ({ type: SET_QUANTITY, itemId, amount });\r\n\r\nconst reducer = (cart: CartItem[] = [], action: AnyAction) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      if(cart.some(item => item.id === action.cartItem.id)) {\r\n        return cart.map(item => {\r\n          if(item.id === action.cartItem.id) {\r\n            return {\r\n              ...item,\r\n              quantity: item.quantity + 1,\r\n            }\r\n          }\r\n\r\n          return item\r\n        })\r\n      }\r\n\r\n      return [...cart, action.cartItem];\r\n\r\n    case SET_QUANTITY: \r\n      return cart.map(item => {\r\n        if(item.id === action.itemId) {\r\n          const result = item.quantity + action.amount\r\n\r\n          return {\r\n            ...item,\r\n            quantity: result\r\n          }\r\n        }\r\n\r\n        return item\r\n      })\r\n\r\n    case REMOVE_FROM_CART: \r\n      return cart.filter(item => item.id !== action.itemId)\r\n\r\n    default:\r\n      return cart;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { AnyAction } from 'redux';\r\n\r\n\r\nconst SET_SIDEBAR = 'SET_SIDEBAR';\r\n\r\nexport const setSidebar = (value: boolean) => ({ type: SET_SIDEBAR, value });\r\n\r\nconst reducer = (isSidebarOpen: boolean = false, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case SET_SIDEBAR:\r\n      return action.value;\r\n\r\n    default:\r\n      return isSidebarOpen;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { Dispatch } from 'react';\r\n\r\nimport * as api from '../helpers/api';\r\nimport { setError } from './error';\r\nimport productsReducer, { setProducts } from './products';\r\nimport sortByReducer from './sort';\r\nimport errorReducer from './error';\r\nimport cartReducer from './cart';\r\nimport sidebarReducer from './sidebar';\r\nimport filterReducer from './filter';\r\n\r\nconst rootReducer = combineReducers({\r\n  products: productsReducer,\r\n  errorMessage: errorReducer,\r\n  sortBy: sortByReducer,\r\n  cart: cartReducer,\r\n  sidebarIsOpen: sidebarReducer,\r\n  filterBy: filterReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const getProducts = (state: RootState) => state.products;\r\nexport const getSortBy = (state: RootState) => state.sortBy;\r\nexport const getCartItems = (state: RootState) => state.cart;\r\nexport const getIsSidebarOpen = (state: RootState) => state.sidebarIsOpen;\r\nexport const getFilterBy = (state: RootState) => state.filterBy;\r\n\r\nexport const loadProducts = () => {\r\n  return async (dispatch: Dispatch<any>) => {\r\n    dispatch(setError(''));\r\n\r\n    try {\r\n      const products = await api.fetchProducts();\r\n\r\n      dispatch(setProducts(products))\r\n    } catch (e) {\r\n      dispatch(setError(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk)),\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport './Navigation.scss';\r\nimport { setFilterBy } from '../store/filter';\r\nimport { CATEGORY } from '../constants';\r\nimport { getFilterBy } from '../store';\r\n\r\nconst Navigation = () => {\r\n  const dispatch = useDispatch();\r\n  const activeCategory = useSelector(getFilterBy);\r\n\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <ul className=\"navigation__list\">\r\n        {Object.entries(CATEGORY).map(([, categoryName]) => (\r\n          <li\r\n            className={classNames(\r\n              'navigation__item',\r\n              { 'navigation__item--active': activeCategory === categoryName }\r\n            )}\r\n            key={categoryName}\r\n            onClick={() => dispatch(setFilterBy(categoryName))}\r\n          >\r\n            {categoryName}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Carousel.scss';\r\n\r\nconst images = [\r\n  'img/products/1.png',\r\n  'img/products/2.png',\r\n  'img/products/3.png',\r\n  'img/products/4.png',\r\n  'img/products/5.png',\r\n  'img/products/6.png',\r\n];\r\n\r\ntype Props = {\r\n  activeImage: string;\r\n  changeImage: (imgUrl: string) => void;\r\n}\r\n\r\nconst Carousel: React.FC<Props> = ({ changeImage, activeImage }) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  const prevSlide = () => {\r\n    const lastIndex = images.length - 1;\r\n    const resetIndex = currentImageIndex === 0;\r\n    const index = resetIndex ? lastIndex : currentImageIndex - 1;\r\n    setCurrentImageIndex(index)\r\n  }\r\n\r\n  const nextSlide = () => {\r\n    const lastIndex = images.length - 1;\r\n    const resetIndex = currentImageIndex === lastIndex;\r\n    const index = resetIndex ? 0 : currentImageIndex + 1;\r\n    setCurrentImageIndex(index)\r\n  }\r\n\r\n  const index = currentImageIndex;\r\n  let imgToShow = images.slice(index, index + 5);\r\n  if (imgToShow.length < 5) {\r\n    imgToShow = imgToShow.concat(images.slice(0, 5 - imgToShow.length))\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"carousel\"\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <button\r\n        className=\"carousel__prev-button\"\r\n        onClick={prevSlide}\r\n      />\r\n      <ul className=\"carousel__list\">\r\n        {imgToShow.map(imageUrl => (\r\n          <li\r\n            className=\"carousel__item\"\r\n            key={imageUrl}\r\n          >\r\n            <img\r\n              className={classNames(\r\n                'carousel__image',\r\n                { 'carousel__image--active': activeImage === imageUrl }\r\n              )}\r\n              onClick={() => changeImage(imageUrl)}\r\n              src={imageUrl}\r\n              alt=\"\"\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button\r\n        className=\"carousel__next-button\"\r\n        onClick={nextSlide}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Carousel;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ProductCard.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Carusel from './Carousel';\r\n\r\ntype Props = {\r\n  product: Product;\r\n}\r\n\r\nconst ProductCard: React.FC<Props> = ({ product }) => {\r\n  const {\r\n    title,\r\n    imageUrl,\r\n    category,\r\n    price,\r\n    available,\r\n    slug,\r\n  } = product;\r\n\r\n  const [itemImage, setItemImage] = useState(imageUrl);\r\n  const history = useHistory();\r\n\r\n  const changeImage = (imgUrl: string) => {\r\n    setItemImage(imgUrl)\r\n  }\r\n\r\n  const handleClick = () => {\r\n    history.push({ pathname: slug })\r\n  }\r\n\r\n  return (\r\n    <article onClick={handleClick} className=\"product-card\">\r\n      <img\r\n        className=\"product-card__image\"\r\n        src={itemImage}\r\n        alt=\"title\"\r\n      />\r\n      <div className=\"product-card__details\" >\r\n        <div className=\"product-card__carusel\">\r\n          <Carusel\r\n            activeImage={itemImage}\r\n            changeImage={changeImage}\r\n            \r\n          />\r\n        </div>\r\n        <span className=\"product-card__details-category\">\r\n          {category}\r\n        </span>\r\n        <span\r\n          className=\"product-card__details-title\"\r\n        >\r\n          {title}\r\n        </span>\r\n        <span className=\"product-card__details-price\">\r\n          $\r\n            {price}\r\n        </span>\r\n        <span className=\"product-card__details-available\">\r\n          {`на складе: ${available}`}\r\n        </span>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './ProductsList.scss';\r\nimport * as store from '../store';\r\nimport ProductCard from './ProductCard';\r\nimport { SORT_BY, CATEGORY } from '../constants';\r\n\r\nconst ProductsList = () => {\r\n  const products: Product[] = useSelector(store.getProducts);\r\n  const sortBy = useSelector(store.getSortBy);\r\n  const filterBy = useSelector(store.getFilterBy);\r\n\r\n  const sortedProducts = useMemo(() => {\r\n    let result = [...products];\r\n\r\n    if(filterBy !== '' && filterBy !== CATEGORY.all) {\r\n      result = result.filter(item => item.category === filterBy)\r\n    }\r\n\r\n    switch (sortBy) {\r\n      case SORT_BY.priceAsc:\r\n        return [...result]\r\n          .sort((a, b) => a.price - b.price)\r\n\r\n      case SORT_BY.priceDesc:\r\n        return [...result]\r\n          .sort((a, b) => b.price - a.price)\r\n\r\n      case SORT_BY.popular:\r\n        return [...result]\r\n          .sort((a, b) => b.reviews - a.reviews)\r\n\r\n      case SORT_BY.new:\r\n        return [...result]\r\n          .sort((a, b) => Date.parse(a.date) - Date.parse(b.date))\r\n\r\n      default:\r\n        return result\r\n    }\r\n  }, [sortBy, filterBy, products]);\r\n\r\n  return (\r\n    <>\r\n      {sortedProducts.length > 0 && (\r\n        <div className=\"products\">\r\n          {sortedProducts.map((product: Product) => (\r\n            <ProductCard\r\n              key={product.id}\r\n              product={product}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductsList;\r\n","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Sort.scss';\r\nimport { SORT_BY } from '../constants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSortBy } from '../store/sort';\r\nimport { getSortBy } from '../store';\r\n\r\nconst dropdownOptions = [\r\n  {\r\n    value: SORT_BY.priceDesc,\r\n    title: 'От дорогих к дешевым',\r\n  },\r\n  {\r\n    value: SORT_BY.priceAsc,\r\n    title: 'От дешевых к дорогим',\r\n  },\r\n  {\r\n    value: SORT_BY.popular,\r\n    title: 'Популярные',\r\n  },\r\n  {\r\n    value: SORT_BY.new,\r\n    title: 'Новые',\r\n  },\r\n];\r\n\r\nconst Sort = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const activeSortBy = useSelector(getSortBy);\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <span\r\n        className={classNames(\r\n          'dropdown__button',\r\n          { 'dropdown__button--active': isOpen }\r\n        )}\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        Сортировать\r\n      </span>\r\n\r\n      <ul\r\n        className={classNames(\r\n          'dropdown__list',\r\n          { 'dropdown__list--active': isOpen }\r\n        )}\r\n      >\r\n        {dropdownOptions.map(({ value, title }) => (\r\n          <li key={value}>\r\n            <button\r\n              className={\r\n                classNames(\r\n                  'dropdown__item',\r\n                  { 'dropdown__item--active': value === activeSortBy }\r\n                )\r\n              }\r\n              type=\"button\"\r\n              onClick={() => {\r\n                dispatch(setSortBy(value))\r\n                setIsOpen(false)\r\n              }}\r\n            >\r\n              {title}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\n\r\nimport './HomePage.scss';\r\nimport Navigation from '../components/Navigation';\r\nimport ProductsList from '../components/ProductsList';\r\nimport Sort from '../components/Sort';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <main className=\"homepage\">\r\n      <div>\r\n        <Navigation />\r\n        <Sort />\r\n      </div>\r\n      <ProductsList />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './ItemPage.scss';\r\nimport * as store from '../store';\r\nimport classNames from 'classnames';\r\nimport { addToCart } from '../store/cart';\r\nimport { setSidebar } from '../store/sidebar';\r\n\r\nconst ItemPage = () => {\r\n  const history = useHistory();\r\n  const { slug } = useParams();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [pickedSize, setPickedSize] = useState('');\r\n  const products = useSelector(store.getProducts);\r\n  const dispatch = useDispatch();\r\n  const isSidebarOpen = useSelector(store.getIsSidebarOpen);\r\n\r\n  const product = useMemo(() => {\r\n    return products.find((product: Product) => product.slug === slug)\r\n  }, [slug, products])\r\n\r\n  return (\r\n    <>\r\n      {product && (\r\n        <main>\r\n          <section className=\"product\">\r\n            <img\r\n              className=\"product__image\"\r\n              src={product.imageUrl}\r\n              alt={product.title}\r\n            />\r\n            <div>\r\n              <button\r\n                onClick={history.goBack}\r\n                className=\"product__button product__button--back\"\r\n              >\r\n                Назад\r\n            </button>\r\n              <div className=\"product__category\">\r\n                {product.category}\r\n              </div>\r\n              <h1 className=\"product__title\">\r\n                {product.title}\r\n              </h1>\r\n              <div className=\"product__actions\">\r\n                <div className=\"product__dropdown\">\r\n                  <button\r\n                    className=\"product__button product__button--size\"\r\n                    onClick={() => setIsOpen(!isOpen)}\r\n                  >\r\n                    {pickedSize ? pickedSize : 'Размер'}\r\n                  </button>\r\n\r\n                  <ul\r\n                    className={classNames(\r\n                      'product__dropdown-list',\r\n                      { 'product__dropdown-list--active': isOpen }\r\n                    )}\r\n                  >\r\n                    {product.sizes.map((size: string) => (\r\n                      <li\r\n                        className={classNames(\r\n                          'product__dropdown-item',\r\n                          { 'product__dropdown-item--active': pickedSize === size }\r\n                        )}\r\n                        onClick={() => {\r\n                          setPickedSize(size)\r\n                          setIsOpen(false)\r\n                        }}\r\n                        key={size}\r\n                      >\r\n                        {size}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n                </div>\r\n                <button\r\n                  className={classNames(\r\n                    'product__buy',\r\n                    { 'product__buy--disabled': pickedSize === '' }\r\n                  )}\r\n                  disabled={pickedSize === ''}\r\n                  onClick={() => {\r\n                    dispatch(addToCart({\r\n                      id: product.id,\r\n                      title: product.title,\r\n                      size: pickedSize,\r\n                      imageUrl: product.imageUrl,\r\n                      price: product.price,\r\n                      quantity: 1,\r\n                    }))\r\n                    if(!isSidebarOpen) {\r\n                      dispatch(setSidebar(true))\r\n                    }\r\n                  }}\r\n                >\r\n                  В корзину\r\n            </button>\r\n              </div>\r\n              <div className=\"product__details\">\r\n                <div className=\"product__details-left\">\r\n                  <p className=\"product__desc\">\r\n                    Рубашка на пуговицах от <b>Yohji Yamamoto</b> (Йоджи Ямамото). Классический воротник, застежка на пуговицах спереди, нагрудный карман, удлиненная модель, прошитые панели, длинные рукава и манжеты на пуговицах.\r\n              </p>\r\n                  <p className=\"product__desc\">\r\n                    Рост модели 1,88 м, надет размер 2\r\n              </p>\r\n                  <p className=\"product__desc\">\r\n                    Образ модели дополнен: Yohji Yamamoto широкие укороченные брюки, Converse кроссовки 'One Star'.\r\n              </p>\r\n                </div>\r\n                <div className=\"product__details-right\">\r\n                  <table className=\"product__properties\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"product__properties-title\">Цвет:</td>\r\n                        <td className=\"product__properties-value\">Черный</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"product__properties-title\">Состав:</td>\r\n                        <td className=\"product__properties-value\">Шерсть 100%</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"product__properties-title\">Уход:</td>\r\n                        <td className=\"product__properties-value\">Сухая чистка</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"product__properties-title\">Артикул:</td>\r\n                        <td className=\"product__properties-value\">HHB73100</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemPage;\r\n","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div>\r\n      Not found\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Cart.scss';\r\nimport { getCartItems, getIsSidebarOpen } from '../store';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSidebar } from '../store/sidebar';\r\n\r\nconst Cart = () => {\r\n  const itemsCount = useSelector(getCartItems);\r\n  const isSidebarOpen = useSelector(getIsSidebarOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div\r\n      className=\"cart\"\r\n      onClick={() => {\r\n        if (itemsCount.length > 0) {\r\n          dispatch(setSidebar(!isSidebarOpen))\r\n        }\r\n      }}\r\n    >\r\n      <button\r\n        className={classNames(\r\n          'cart__button',\r\n          { 'cart__button--active': itemsCount.length !== 0 }\r\n        )}\r\n        type=\"button\"\r\n      />\r\n      {itemsCount.length !== 0 && (\r\n        <span\r\n          className=\"cart__count\"\r\n        >\r\n          {itemsCount.length}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.scss';\r\nimport Cart from './Cart';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <nav>\r\n        <ul className=\"header__list\">\r\n          <li className=\"header__item\">\r\n            <Link to=\"/\">\r\n              <img\r\n                className=\"header__logo\"\r\n                src=\"img/logo.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </Link>\r\n          </li>\r\n          <li className=\"header__item--card\">\r\n            <Cart />\r\n          </li>\r\n        </ul>\r\n\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useMemo, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './Sidebar.scss';\r\nimport { getIsSidebarOpen } from '../store';\r\nimport { setSidebar } from '../store/sidebar';\r\nimport { getCartItems } from '../store';\r\nimport { setQuantity, removeFromCart } from '../store/cart';\r\n\r\nconst Sidebar = () => {\r\n  const isSidebarOpen = useSelector(getIsSidebarOpen);\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector(getCartItems);\r\n\r\n  const cartItemsTotal = useMemo(() => {\r\n    let total = 0;\r\n\r\n    if (cartItems.length !== 0) {\r\n      cartItems.map(({ price, quantity }) => total += (price * quantity))\r\n    }\r\n\r\n    return total;\r\n  }, [cartItems]);\r\n\r\n  useEffect(() => {\r\n    cartItems.forEach(({ id, quantity }) => {\r\n      if (quantity < 1) {\r\n        dispatch(removeFromCart(id))\r\n      }\r\n    })\r\n  }, [cartItems, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if(cartItems.length === 0) {\r\n      dispatch(setSidebar(false));\r\n    }\r\n  }, [cartItems, dispatch]);\r\n\r\n  return (\r\n    <aside\r\n      className={classNames(\r\n        'sidebar',\r\n        { 'sidebar--opened': isSidebarOpen }\r\n      )}\r\n    >\r\n      <button\r\n        className=\"sidebar__close\"\r\n        onClick={() => dispatch(setSidebar(false))}\r\n      />\r\n\r\n      {cartItems && (\r\n        <ul className=\"sidebar__list\">\r\n          {cartItems.map(({ id, title, quantity, imageUrl, price }) => (\r\n            <li key={id} className=\"sidebar__item\">\r\n              <img\r\n                className=\"sidebar__image\"\r\n                src={imageUrl}\r\n                alt={title}\r\n              />\r\n              <div className=\"sidebar__details\">\r\n                <div className=\"sidebar__details-title\">\r\n                  {title}\r\n                </div>\r\n                <div className=\"sidebar__details-actions\">\r\n                  <div className=\"sidebar__details-quantity\">\r\n                    <button\r\n                      className=\"sidebar__quantity-button\"\r\n                      type=\"button\"\r\n                      onClick={() => dispatch(setQuantity(id, -1))}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <div className=\"sidebar__quantity\">\r\n                      {quantity}\r\n                    </div>\r\n                    <button\r\n                      className=\"sidebar__quantity-button\"\r\n                      type=\"button\"\r\n                      onClick={() => dispatch(setQuantity(id, +1))}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"sidebar__details-price\">\r\n                    $\r\n                    {price}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {cartItemsTotal > 0 && (\r\n        <div className=\"sidebar__total\">\r\n          <div className=\"sidebar__total-title\">\r\n            Итого\r\n          </div>\r\n          <div className=\"sidebar__total-value\">\r\n            $\r\n            {cartItemsTotal}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <button\r\n        className=\"sidebar__buy\"\r\n      >\r\n        Купить\r\n      </button>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './App.scss';\nimport MainPage from './pages/HomePage';\nimport ItemPage from './pages/ItemPage';\nimport PageNotFound from './pages/PageNotFound';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport * as store from './store';\nimport { setSidebar } from './store/sidebar';\n\nfunction App() {\n  const products = useSelector(store.getProducts)\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const isSidebarOpen = useSelector(store.getIsSidebarOpen);\n\n  useEffect(() => {\n    if (products.length === 0) {\n      dispatch(store.loadProducts())\n    }\n  }, [dispatch, products]);\n\n  useEffect(() => {\n    if(isSidebarOpen) {\n      dispatch(setSidebar(false));\n    }\n    // eslint-disable-next-line\n  }, [location]);\n\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Sidebar />\n      <Switch>\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/:slug\" component={ItemPage} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}